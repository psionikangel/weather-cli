#!/usr/bin/env ruby

require 'optparse'
require 'net/http'
require 'json'
require 'date'
  
options = {:city => nil, :key => nil, :lat => nil, :lon => nil}

parser = OptionParser.new do|opts|
	opts.banner = "Usage: weather.rb [options]"
    
    opts.on('-k', '--key APIKEY', 'API key for the web service at api.openweathermap.org') do |key|
        options[:key] = key;
    end
    
    opts.on('-c', '--city CITYID', 'City_Id for the weather request (you can download the list here: http://bulk.openweathermap.org/sample/ )') do |city|
		options[:city] = city;
    end
    
    opts.on('-l', '--latitude VAL', Float, 'Latitude for the requested city') do |lat|
        options[:lat] = lat;
    end

    opts.on('-g', '--longitude VAL', Float, 'Longitude for the requested city') do |lon|
        options[:lon] = lon;
    end

	opts.on('-h', '--help', 'Displays Help') do
		puts opts
		exit
	end
end

parser.parse!

if options[:key] == nil
    puts "An api key is required, please use the -h flag for usage help"
    exit
end

if options[:city] != nil
    uri = URI('http://api.openweathermap.org/data/2.5/weather?id=' + options[:city] + '&APPID=' + options[:key] + '&units=metric')
elsif options[:lat] != nil and options[:lon] != nil
    uri = URI('http://api.openweathermap.org/data/2.5/weather?lat=' + options[:lat].to_s + '&lon=' + options[:lon].to_s + '&APPID=' + options[:key] + '&units=metric')
else
    puts "Use the -h flag for usage help"
    exit
end


Net::HTTP.start(uri.host, uri.port) do |http|
    req = Net::HTTP::Get.new uri
    res = http.request(req)
    
    js = JSON.parse(res.body)    
    puts "\nWeather report for " + js["name"] + ' (' + js["coord"]["lat"].to_s + ',' + js["coord"]["lon"].to_s + ')'
    puts "Weather: " + js["weather"][0]["main"] + ' (' + js["weather"][0]["description"] + ')'
    puts "Temperature: " + js["main"]["temp"].to_s + " \u2103".encode('utf-8')
    puts "Humidity: " + js["main"]["humidity"].to_s + "%"
    puts "Wind: " + js["wind"]["speed"].to_s + " km/h"
    puts "\nData generated by api.openweathermap.org on " + Time.at(js["dt"]).to_datetime.to_s 
end


